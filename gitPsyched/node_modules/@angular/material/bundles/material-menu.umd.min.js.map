{"version":3,"file":"material-menu.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/lib/menu/menu-errors.ts","../../src/lib/menu/menu-trigger.ts","../../src/lib/menu/menu-animations.ts","../../src/lib/menu/menu-item.ts","../../src/lib/menu/menu-directive.ts","../../src/lib/menu/menu-module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * @docs-private\n */\nexport function throwMatMenuMissingError() {\n  throw Error(`mat-menu-trigger: must pass in an mat-menu instance.\n\n    Example:\n      <mat-menu #menu=\"matMenu\"></mat-menu>\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\n}\n\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nexport function throwMatMenuInvalidPositionX() {\n  throw Error(`x-position value must be either 'before' or after'.\n      Example: <mat-menu x-position=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nexport function throwMatMenuInvalidPositionY() {\n  throw Error(`y-position value must be either 'above' or below'.\n      Example: <mat-menu y-position=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isFakeMousedownFromScreenReader} from '@angular/cdk/a11y';\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {LEFT_ARROW, RIGHT_ARROW} from '@angular/cdk/keycodes';\nimport {\n  ConnectedPositionStrategy,\n  HorizontalConnectionPos,\n  Overlay,\n  OverlayRef,\n  OverlayConfig,\n  RepositionScrollStrategy,\n  ScrollStrategy,\n  VerticalConnectionPos,\n} from '@angular/cdk/overlay';\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {filter} from 'rxjs/operators/filter';\nimport {\n  AfterContentInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  Self,\n  ViewContainerRef,\n} from '@angular/core';\nimport {merge} from 'rxjs/observable/merge';\nimport {of as observableOf} from 'rxjs/observable/of';\nimport {Subscription} from 'rxjs/Subscription';\nimport {MatMenu} from './menu-directive';\nimport {throwMatMenuMissingError} from './menu-errors';\nimport {MatMenuItem} from './menu-item';\nimport {MatMenuPanel} from './menu-panel';\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\nimport {FocusMonitor, FocusOrigin} from '@angular/cdk/a11y';\n\n/** Injection token that determines the scroll handling while the menu is open. */\nexport const MAT_MENU_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mat-menu-scroll-strategy');\n\n/** @docs-private */\nexport function MAT_MENU_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => RepositionScrollStrategy {\n  return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MAT_MENU_SCROLL_STRATEGY_PROVIDER = {\n  provide: MAT_MENU_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_MENU_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n\n// TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\n\n/** Default top padding of the menu panel. */\nexport const MENU_PANEL_TOP_PADDING = 8;\n\n/**\n * This directive is intended to be used in conjunction with an mat-menu tag.  It is\n * responsible for toggling the display of the provided menu instance.\n */\n@Directive({\n  selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n  host: {\n    'aria-haspopup': 'true',\n    '(mousedown)': '_handleMousedown($event)',\n    '(keydown)': '_handleKeydown($event)',\n    '(click)': '_handleClick($event)',\n  },\n  exportAs: 'matMenuTrigger'\n})\nexport class MatMenuTrigger implements AfterContentInit, OnDestroy {\n  private _portal: TemplatePortal;\n  private _overlayRef: OverlayRef | null = null;\n  private _menuOpen: boolean = false;\n  private _closeSubscription = Subscription.EMPTY;\n  private _positionSubscription = Subscription.EMPTY;\n  private _hoverSubscription = Subscription.EMPTY;\n\n  // Tracking input type is necessary so it's possible to only auto-focus\n  // the first item of the list when the menu is opened via the keyboard\n  private _openedByMouse: boolean = false;\n\n  /**\n   * @deprecated\n   * @deletion-target 6.0.0\n   */\n  @Input('mat-menu-trigger-for')\n  get _deprecatedMatMenuTriggerFor(): MatMenuPanel {\n    return this.menu;\n  }\n\n  set _deprecatedMatMenuTriggerFor(v: MatMenuPanel) {\n    this.menu = v;\n  }\n\n  /** References the menu instance that the trigger is associated with. */\n  @Input('matMenuTriggerFor') menu: MatMenuPanel;\n\n  /** Event emitted when the associated menu is opened. */\n  @Output() menuOpened: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * Event emitted when the associated menu is opened.\n   * @deprecated Switch to `menuOpened` instead\n   * @deletion-target 6.0.0\n   */\n  @Output() onMenuOpen: EventEmitter<void> = this.menuOpened;\n\n  /** Event emitted when the associated menu is closed. */\n  @Output() menuClosed: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * Event emitted when the associated menu is closed.\n   * @deprecated Switch to `menuClosed` instead\n   * @deletion-target 6.0.0\n   */\n  @Output() onMenuClose: EventEmitter<void> = this.menuClosed;\n\n  constructor(private _overlay: Overlay,\n              private _element: ElementRef,\n              private _viewContainerRef: ViewContainerRef,\n              @Inject(MAT_MENU_SCROLL_STRATEGY) private _scrollStrategy,\n              @Optional() private _parentMenu: MatMenu,\n              @Optional() @Self() private _menuItemInstance: MatMenuItem,\n              @Optional() private _dir: Directionality,\n              // TODO(crisbeto): make the _focusMonitor required when doing breaking changes.\n              private _focusMonitor?: FocusMonitor) {\n\n    if (_menuItemInstance) {\n      _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n    }\n  }\n\n  ngAfterContentInit() {\n    this._checkMenu();\n\n    this.menu.close.subscribe(reason => {\n      this._destroyMenu();\n\n      // If a click closed the menu, we should close the entire chain of nested menus.\n      if (reason === 'click' && this._parentMenu) {\n        this._parentMenu.closed.emit(reason);\n      }\n    });\n\n    if (this.triggersSubmenu()) {\n      // Subscribe to changes in the hovered item in order to toggle the panel.\n      this._hoverSubscription = this._parentMenu._hovered()\n          .pipe(filter(active => active === this._menuItemInstance))\n          .subscribe(() => {\n            this._openedByMouse = true;\n            this.openMenu();\n          });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n\n    this._cleanUpSubscriptions();\n  }\n\n  /** Whether the menu is open. */\n  get menuOpen(): boolean {\n    return this._menuOpen;\n  }\n\n  /** The text direction of the containing app. */\n  get dir(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Whether the menu triggers a sub-menu or a top-level one. */\n  triggersSubmenu(): boolean {\n    return !!(this._menuItemInstance && this._parentMenu);\n  }\n\n  /** Toggles the menu between the open and closed states. */\n  toggleMenu(): void {\n    return this._menuOpen ? this.closeMenu() : this.openMenu();\n  }\n\n  /** Opens the menu. */\n  openMenu(): void {\n    if (!this._menuOpen) {\n      this._createOverlay().attach(this._portal);\n      this._closeSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\n      this._initMenu();\n\n      if (this.menu instanceof MatMenu) {\n        this.menu._startAnimation();\n      }\n    }\n  }\n\n  /** Closes the menu. */\n  closeMenu(): void {\n    this.menu.close.emit();\n  }\n\n  /**\n   * Focuses the menu trigger.\n   * @param origin Source of the menu trigger's focus.\n   */\n  focus(origin: FocusOrigin = 'program') {\n    if (this._focusMonitor) {\n      this._focusMonitor.focusVia(this._element.nativeElement, origin);\n    } else {\n      this._element.nativeElement.focus();\n    }\n  }\n\n  /** Closes the menu and does the necessary cleanup. */\n  private _destroyMenu() {\n    if (this._overlayRef && this.menuOpen) {\n      this._resetMenu();\n      this._closeSubscription.unsubscribe();\n      this._overlayRef.detach();\n\n      if (this.menu instanceof MatMenu) {\n        this.menu._resetAnimation();\n      }\n    }\n  }\n\n  /**\n   * This method sets the menu state to open and focuses the first item if\n   * the menu was opened via the keyboard.\n   */\n  private _initMenu(): void {\n    this.menu.parentMenu = this.triggersSubmenu() ? this._parentMenu : undefined;\n    this.menu.direction = this.dir;\n    this._setMenuElevation();\n    this._setIsMenuOpen(true);\n    this.menu.focusFirstItem(this._openedByMouse ? 'mouse' : 'program');\n  }\n\n  /** Updates the menu elevation based on the amount of parent menus that it has. */\n  private _setMenuElevation(): void {\n    if (this.menu.setElevation) {\n      let depth = 0;\n      let parentMenu = this.menu.parentMenu;\n\n      while (parentMenu) {\n        depth++;\n        parentMenu = parentMenu.parentMenu;\n      }\n\n      this.menu.setElevation(depth);\n    }\n  }\n\n  /**\n   * This method resets the menu when it's closed, most importantly restoring\n   * focus to the menu trigger if the menu was opened via the keyboard.\n   */\n  private _resetMenu(): void {\n    this._setIsMenuOpen(false);\n\n    // We should reset focus if the user is navigating using a keyboard or\n    // if we have a top-level trigger which might cause focus to be lost\n    // when clicking on the backdrop.\n    if (!this._openedByMouse) {\n      // Note that the focus style will show up both for `program` and\n      // `keyboard` so we don't have to specify which one it is.\n      this.focus();\n    } else if (!this.triggersSubmenu()) {\n      this.focus('mouse');\n    }\n\n    this._openedByMouse = false;\n  }\n\n  // set state rather than toggle to support triggers sharing a menu\n  private _setIsMenuOpen(isOpen: boolean): void {\n    this._menuOpen = isOpen;\n    this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n\n    if (this.triggersSubmenu()) {\n      this._menuItemInstance._highlighted = isOpen;\n    }\n  }\n\n  /**\n   * This method checks that a valid instance of MatMenu has been passed into\n   * matMenuTriggerFor. If not, an exception is thrown.\n   */\n  private _checkMenu() {\n    if (!this.menu) {\n      throwMatMenuMissingError();\n    }\n  }\n\n  /**\n   * This method creates the overlay from the provided menu's template and saves its\n   * OverlayRef so that it can be attached to the DOM when openMenu is called.\n   */\n  private _createOverlay(): OverlayRef {\n    if (!this._overlayRef) {\n      this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n      const config = this._getOverlayConfig();\n      this._subscribeToPositions(config.positionStrategy as ConnectedPositionStrategy);\n      this._overlayRef = this._overlay.create(config);\n    }\n\n    return this._overlayRef;\n  }\n\n  /**\n   * This method builds the configuration object needed to create the overlay, the OverlayState.\n   * @returns OverlayConfig\n   */\n  private _getOverlayConfig(): OverlayConfig {\n    return new OverlayConfig({\n      positionStrategy: this._getPosition(),\n      hasBackdrop: !this.triggersSubmenu(),\n      backdropClass: 'cdk-overlay-transparent-backdrop',\n      direction: this.dir,\n      scrollStrategy: this._scrollStrategy()\n    });\n  }\n\n  /**\n   * Listens to changes in the position of the overlay and sets the correct classes\n   * on the menu based on the new position. This ensures the animation origin is always\n   * correct, even if a fallback position is used for the overlay.\n   */\n  private _subscribeToPositions(position: ConnectedPositionStrategy): void {\n    this._positionSubscription = position.onPositionChange.subscribe(change => {\n      const posX: MenuPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n      const posY: MenuPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n\n      this.menu.setPositionClasses(posX, posY);\n    });\n  }\n\n  /**\n   * This method builds the position strategy for the overlay, so the menu is properly connected\n   * to the trigger.\n   * @returns ConnectedPositionStrategy\n   */\n  private _getPosition(): ConnectedPositionStrategy {\n    let [originX, originFallbackX]: HorizontalConnectionPos[] =\n        this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n\n    let [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\n        this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n\n    let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n    let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n    let offsetY = 0;\n\n    if (this.triggersSubmenu()) {\n      // When the menu is a sub-menu, it should always align itself\n      // to the edges of the trigger, instead of overlapping it.\n      overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n      originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n      offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n    } else if (!this.menu.overlapTrigger) {\n      originY = overlayY === 'top' ? 'bottom' : 'top';\n      originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n    }\n\n    return this._overlay.position()\n        .connectedTo(this._element, {originX, originY}, {overlayX, overlayY})\n        .withDirection(this.dir)\n        .withOffsetY(offsetY)\n        .withFallbackPosition(\n            {originX: originFallbackX, originY},\n            {overlayX: overlayFallbackX, overlayY})\n        .withFallbackPosition(\n            {originX, originY: originFallbackY},\n            {overlayX, overlayY: overlayFallbackY},\n            undefined, -offsetY)\n        .withFallbackPosition(\n            {originX: originFallbackX, originY: originFallbackY},\n            {overlayX: overlayFallbackX, overlayY: overlayFallbackY},\n            undefined, -offsetY);\n  }\n\n  /** Cleans up the active subscriptions. */\n  private _cleanUpSubscriptions(): void {\n    this._closeSubscription.unsubscribe();\n    this._positionSubscription.unsubscribe();\n    this._hoverSubscription.unsubscribe();\n  }\n\n  /** Returns a stream that emits whenever an action that should close the menu occurs. */\n  private _menuClosingActions() {\n    const backdrop = this._overlayRef!.backdropClick();\n    const detachments = this._overlayRef!.detachments();\n    const parentClose = this._parentMenu ? this._parentMenu.close : observableOf();\n    const hover = this._parentMenu ? this._parentMenu._hovered().pipe(\n      filter(active => active !== this._menuItemInstance),\n      filter(() => this._menuOpen)\n    ) : observableOf();\n\n    return merge(backdrop, parentClose, hover, detachments);\n  }\n\n  /** Handles mouse presses on the trigger. */\n  _handleMousedown(event: MouseEvent): void {\n    if (!isFakeMousedownFromScreenReader(event)) {\n      this._openedByMouse = true;\n\n      // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n      // we should prevent focus from moving onto it via click to avoid the\n      // highlight from lingering on the menu item.\n      if (this.triggersSubmenu()) {\n        event.preventDefault();\n      }\n    }\n  }\n\n  /** Handles key presses on the trigger. */\n  _handleKeydown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n\n    if (this.triggersSubmenu() && (\n            (keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n            (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n      this.openMenu();\n    }\n  }\n\n  /** Handles click events on the trigger. */\n  _handleClick(event: MouseEvent): void {\n    if (this.triggersSubmenu()) {\n      // Stop event propagation to avoid closing the parent menu.\n      event.stopPropagation();\n      this.openMenu();\n    } else {\n      this.toggleMenu();\n    }\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport{\n  trigger,\n  state,\n  style,\n  animate,\n  transition,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n */\nexport const matMenuAnimations: {\n  readonly transformMenu: AnimationTriggerMetadata;\n  readonly fadeInItems: AnimationTriggerMetadata;\n} = {\n  /**\n   * This animation controls the menu panel's entry and exit from the page.\n   *\n   * When the menu panel is added to the DOM, it scales in and fades in its border.\n   *\n   * When the menu panel is removed from the DOM, it simply fades out after a brief\n   * delay to display the ripple.\n   */\n  transformMenu: trigger('transformMenu', [\n    // TODO(kara): switch to :enter and :leave once Mobile Safari is sorted out.\n    state('void', style({\n      opacity: 0,\n      // This starts off from 0.01, instead of 0, because there's an issue in the Angular animations\n      // as of 4.2, which causes the animation to be skipped if it starts from 0.\n      transform: 'scale(0.01, 0.01)'\n    })),\n    state('enter-start', style({\n      opacity: 1,\n      transform: 'scale(1, 0.5)'\n    })),\n    state('enter', style({\n      transform: 'scale(1, 1)'\n    })),\n    transition('void => enter-start', animate('100ms linear')),\n    transition('enter-start => enter', animate('300ms cubic-bezier(0.25, 0.8, 0.25, 1)')),\n    transition('* => void', animate('150ms 50ms linear', style({opacity: 0})))\n  ]),\n\n\n  /**\n   * This animation fades in the background color and content of the menu panel\n   * after its containing element is scaled in.\n   */\n  fadeInItems: trigger('fadeInItems', [\n    state('showing', style({opacity: 1})),\n    transition('void => *', [\n      style({opacity: 0}),\n      animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n    ])\n  ])\n};\n\n/**\n * @deprecated\n * @deletion-target 7.0.0\n */\nexport const fadeInItems = matMenuAnimations.fadeInItems;\n\n/**\n * @deprecated\n * @deletion-target 7.0.0\n */\nexport const transformMenu = matMenuAnimations.transformMenu;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusableOption, FocusMonitor, FocusOrigin} from '@angular/cdk/a11y';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  OnDestroy,\n  ViewEncapsulation,\n  Inject,\n} from '@angular/core';\nimport {\n  CanDisable,\n  CanDisableRipple,\n  mixinDisabled,\n  mixinDisableRipple\n} from '@angular/material/core';\nimport {Subject} from 'rxjs/Subject';\nimport {DOCUMENT} from '@angular/common';\n\n// Boilerplate for applying mixins to MatMenuItem.\n/** @docs-private */\nexport class MatMenuItemBase {}\nexport const _MatMenuItemMixinBase = mixinDisableRipple(mixinDisabled(MatMenuItemBase));\n\n/**\n * This directive is intended to be used inside an mat-menu tag.\n * It exists mostly to set the role attribute.\n */\n@Component({\n  moduleId: module.id,\n  selector: '[mat-menu-item]',\n  exportAs: 'matMenuItem',\n  inputs: ['disabled', 'disableRipple'],\n  host: {\n    'role': 'menuitem',\n    'class': 'mat-menu-item',\n    '[class.mat-menu-item-highlighted]': '_highlighted',\n    '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n    '[attr.tabindex]': '_getTabIndex()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.disabled]': 'disabled || null',\n    '(click)': '_checkDisabled($event)',\n    '(mouseenter)': '_emitHoverEvent()',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  templateUrl: 'menu-item.html',\n})\nexport class MatMenuItem extends _MatMenuItemMixinBase\n    implements FocusableOption, CanDisable, CanDisableRipple, OnDestroy {\n\n  private _document: Document;\n\n  /** Stream that emits when the menu item is hovered. */\n  _hovered: Subject<MatMenuItem> = new Subject<MatMenuItem>();\n\n  /** Whether the menu item is highlighted. */\n  _highlighted: boolean = false;\n\n  /** Whether the menu item acts as a trigger for a sub-menu. */\n  _triggersSubmenu: boolean = false;\n\n  constructor(\n    private _elementRef: ElementRef,\n    @Inject(DOCUMENT) document?: any,\n    private _focusMonitor?: FocusMonitor) {\n\n    // @deletion-target 6.0.0 make `_focusMonitor` and `document` required params.\n    super();\n\n    if (_focusMonitor) {\n      // Start monitoring the element so it gets the appropriate focused classes. We want\n      // to show the focus style for menu items only when the focus was not caused by a\n      // mouse or touch interaction.\n      _focusMonitor.monitor(this._getHostElement(), false);\n    }\n\n    this._document = document;\n  }\n\n  /** Focuses the menu item. */\n  focus(origin: FocusOrigin = 'program'): void {\n    if (this._focusMonitor) {\n      this._focusMonitor.focusVia(this._getHostElement(), origin);\n    } else {\n      this._getHostElement().focus();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._focusMonitor) {\n      this._focusMonitor.stopMonitoring(this._getHostElement());\n    }\n\n    this._hovered.complete();\n  }\n\n  /** Used to set the `tabindex`. */\n  _getTabIndex(): string {\n    return this.disabled ? '-1' : '0';\n  }\n\n  /** Returns the host DOM element. */\n  _getHostElement(): HTMLElement {\n    return this._elementRef.nativeElement;\n  }\n\n  /** Prevents the default element actions if it is disabled. */\n  _checkDisabled(event: Event): void {\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  /** Emits to the hover stream. */\n  _emitHoverEvent() {\n    if (!this.disabled) {\n      this._hovered.next(this);\n    }\n  }\n\n  /** Gets the label to be used when determining whether the option should be focused. */\n  getLabel(): string {\n    const element: HTMLElement = this._elementRef.nativeElement;\n    const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n    let output = '';\n\n    if (element.childNodes) {\n      const length = element.childNodes.length;\n\n      // Go through all the top-level text nodes and extract their text.\n      // We skip anything that's not a text node to prevent the text from\n      // being thrown off by something like an icon.\n      for (let i = 0; i < length; i++) {\n        if (element.childNodes[i].nodeType === textNodeType) {\n          output += element.childNodes[i].textContent;\n        }\n      }\n    }\n\n    return output.trim();\n  }\n\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AnimationEvent} from '@angular/animations';\nimport {FocusKeyManager} from '@angular/cdk/a11y';\nimport {Direction} from '@angular/cdk/bidi';\nimport {ESCAPE, LEFT_ARROW, RIGHT_ARROW} from '@angular/cdk/keycodes';\nimport {startWith} from 'rxjs/operators/startWith';\nimport {switchMap} from 'rxjs/operators/switchMap';\nimport {take} from 'rxjs/operators/take';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation,\n  NgZone,\n} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {merge} from 'rxjs/observable/merge';\nimport {Subscription} from 'rxjs/Subscription';\nimport {matMenuAnimations} from './menu-animations';\nimport {throwMatMenuInvalidPositionX, throwMatMenuInvalidPositionY} from './menu-errors';\nimport {MatMenuItem} from './menu-item';\nimport {MatMenuPanel} from './menu-panel';\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {FocusOrigin} from '@angular/cdk/a11y';\n\n\n/** Default `mat-menu` options that can be overridden. */\nexport interface MatMenuDefaultOptions {\n  /** The x-axis position of the menu. */\n  xPosition: MenuPositionX;\n\n  /** The y-axis position of the menu. */\n  yPosition: MenuPositionY;\n\n  /** Whether the menu should overlap the menu trigger. */\n  overlapTrigger: boolean;\n}\n\n/** Injection token to be used to override the default options for `mat-menu`. */\nexport const MAT_MENU_DEFAULT_OPTIONS =\n    new InjectionToken<MatMenuDefaultOptions>('mat-menu-default-options');\n\n/**\n * Start elevation for the menu panel.\n * @docs-private\n */\nconst MAT_MENU_BASE_ELEVATION = 2;\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-menu',\n  templateUrl: 'menu.html',\n  styleUrls: ['menu.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  animations: [\n    matMenuAnimations.transformMenu,\n    matMenuAnimations.fadeInItems\n  ],\n  exportAs: 'matMenu'\n})\nexport class MatMenu implements AfterContentInit, MatMenuPanel, OnDestroy {\n  private _keyManager: FocusKeyManager<MatMenuItem>;\n  private _xPosition: MenuPositionX = this._defaultOptions.xPosition;\n  private _yPosition: MenuPositionY = this._defaultOptions.yPosition;\n  private _previousElevation: string;\n\n  /** Subscription to tab events on the menu panel */\n  private _tabSubscription = Subscription.EMPTY;\n\n  /** Config object to be passed into the menu's ngClass */\n  _classList: {[key: string]: boolean} = {};\n\n  /** Current state of the panel animation. */\n  _panelAnimationState: 'void' | 'enter-start' | 'enter' = 'void';\n\n  /** Parent menu of the current menu panel. */\n  parentMenu: MatMenuPanel | undefined;\n\n  /** Layout direction of the menu. */\n  direction: Direction;\n\n  /** Position of the menu in the X axis. */\n  @Input()\n  get xPosition(): MenuPositionX { return this._xPosition; }\n  set xPosition(value: MenuPositionX) {\n    if (value !== 'before' && value !== 'after') {\n      throwMatMenuInvalidPositionX();\n    }\n    this._xPosition = value;\n    this.setPositionClasses();\n  }\n\n  /** Position of the menu in the Y axis. */\n  @Input()\n  get yPosition(): MenuPositionY { return this._yPosition; }\n  set yPosition(value: MenuPositionY) {\n    if (value !== 'above' && value !== 'below') {\n      throwMatMenuInvalidPositionY();\n    }\n    this._yPosition = value;\n    this.setPositionClasses();\n  }\n\n  /** @docs-private */\n  @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n\n  /** List of the items inside of a menu. */\n  @ContentChildren(MatMenuItem) items: QueryList<MatMenuItem>;\n\n  /** Whether the menu should overlap its trigger. */\n  @Input()\n  get overlapTrigger(): boolean { return this._overlapTrigger; }\n  set overlapTrigger(value: boolean) {\n    this._overlapTrigger = coerceBooleanProperty(value);\n  }\n  private _overlapTrigger: boolean = this._defaultOptions.overlapTrigger;\n\n  /**\n   * This method takes classes set on the host mat-menu element and applies them on the\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\n   * to style the containing menu from outside the component.\n   * @param classes list of class names\n   */\n  @Input('class')\n  set panelClass(classes: string) {\n    if (classes && classes.length) {\n      this._classList = classes.split(' ').reduce((obj: any, className: string) => {\n        obj[className] = true;\n        return obj;\n      }, {});\n\n      this._elementRef.nativeElement.className = '';\n      this.setPositionClasses();\n    }\n  }\n\n  /**\n   * This method takes classes set on the host mat-menu element and applies them on the\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\n   * to style the containing menu from outside the component.\n   * @deprecated Use `panelClass` instead.\n   * @deletion-target 6.0.0\n   */\n  @Input()\n  get classList(): string { return this.panelClass; }\n  set classList(classes: string) { this.panelClass = classes; }\n\n  /** Event emitted when the menu is closed. */\n  @Output() closed: EventEmitter<void | 'click' | 'keydown'>\n      = new EventEmitter<void | 'click' | 'keydown'>();\n\n  /**\n   * Event emitted when the menu is closed.\n   * @deprecated Switch to `closed` instead\n   * @deletion-target 6.0.0\n   */\n  @Output() close = this.closed;\n\n  constructor(\n    private _elementRef: ElementRef,\n    private _ngZone: NgZone,\n    @Inject(MAT_MENU_DEFAULT_OPTIONS) private _defaultOptions: MatMenuDefaultOptions) { }\n\n  ngAfterContentInit() {\n    this._keyManager = new FocusKeyManager<MatMenuItem>(this.items).withWrap().withTypeAhead();\n    this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.close.emit('keydown'));\n  }\n\n  ngOnDestroy() {\n    this._tabSubscription.unsubscribe();\n    this.closed.complete();\n  }\n\n  /** Stream that emits whenever the hovered menu item changes. */\n  _hovered(): Observable<MatMenuItem> {\n    if (this.items) {\n      return this.items.changes.pipe(\n        startWith(this.items),\n        switchMap(items => merge(...items.map(item => item._hovered)))\n      );\n    }\n\n    return this._ngZone.onStable\n      .asObservable()\n      .pipe(take(1), switchMap(() => this._hovered()));\n  }\n\n  /** Handle a keyboard event from the menu, delegating to the appropriate action. */\n  _handleKeydown(event: KeyboardEvent) {\n    switch (event.keyCode) {\n      case ESCAPE:\n        this.closed.emit('keydown');\n        event.stopPropagation();\n      break;\n      case LEFT_ARROW:\n        if (this.parentMenu && this.direction === 'ltr') {\n          this.closed.emit('keydown');\n        }\n      break;\n      case RIGHT_ARROW:\n        if (this.parentMenu && this.direction === 'rtl') {\n          this.closed.emit('keydown');\n        }\n      break;\n      default:\n        this._keyManager.onKeydown(event);\n    }\n  }\n\n  /**\n   * Focus the first item in the menu.\n   * @param origin Action from which the focus originated. Used to set the correct styling.\n   */\n  focusFirstItem(origin: FocusOrigin = 'program'): void {\n    // TODO(crisbeto): make the origin required when doing breaking changes.\n    this._keyManager.setFocusOrigin(origin).setFirstItemActive();\n  }\n\n  /**\n   * Resets the active item in the menu. This is used when the menu is opened, allowing\n   * the user to start from the first option when pressing the down arrow.\n   */\n  resetActiveItem() {\n    this._keyManager.setActiveItem(-1);\n  }\n\n  /**\n   * It's necessary to set position-based classes to ensure the menu panel animation\n   * folds out from the correct direction.\n   */\n  setPositionClasses(posX: MenuPositionX = this.xPosition, posY: MenuPositionY = this.yPosition) {\n    this._classList['mat-menu-before'] = posX === 'before';\n    this._classList['mat-menu-after'] = posX === 'after';\n    this._classList['mat-menu-above'] = posY === 'above';\n    this._classList['mat-menu-below'] = posY === 'below';\n  }\n\n  /**\n   * Sets the menu panel elevation.\n   * @param depth Number of parent menus that come before the menu.\n   */\n  setElevation(depth: number): void {\n    // The elevation starts at the base and increases by one for each level.\n    const newElevation = `mat-elevation-z${MAT_MENU_BASE_ELEVATION + depth}`;\n    const customElevation = Object.keys(this._classList).find(c => c.startsWith('mat-elevation-z'));\n\n    if (!customElevation || customElevation === this._previousElevation) {\n      if (this._previousElevation) {\n        this._classList[this._previousElevation] = false;\n      }\n\n      this._classList[newElevation] = true;\n      this._previousElevation = newElevation;\n    }\n  }\n\n  /** Starts the enter animation. */\n  _startAnimation() {\n    this._panelAnimationState = 'enter-start';\n  }\n\n  /** Resets the panel animation to its initial state. */\n  _resetAnimation() {\n    this._panelAnimationState = 'void';\n  }\n\n  /** Callback that is invoked when the panel animation completes. */\n  _onAnimationDone(event: AnimationEvent) {\n    // After the initial expansion is done, trigger the second phase of the enter animation.\n    if (event.toState === 'enter-start') {\n      this._panelAnimationState = 'enter';\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {MAT_MENU_DEFAULT_OPTIONS, MatMenu} from './menu-directive';\nimport {MatMenuItem} from './menu-item';\nimport {MAT_MENU_SCROLL_STRATEGY_PROVIDER, MatMenuTrigger} from './menu-trigger';\n\n\n@NgModule({\n  imports: [\n    A11yModule,\n    CommonModule,\n    MatCommonModule,\n    MatRippleModule,\n    OverlayModule,\n  ],\n  exports: [MatMenu, MatMenuItem, MatMenuTrigger, MatCommonModule],\n  declarations: [MatMenu, MatMenuItem, MatMenuTrigger],\n  providers: [\n    MAT_MENU_SCROLL_STRATEGY_PROVIDER,\n    {\n      provide: MAT_MENU_DEFAULT_OPTIONS,\n      useValue: {\n        overlapTrigger: true,\n        xPosition: 'after',\n        yPosition: 'below',\n      },\n    }\n  ],\n})\nexport class MatMenuModule {}\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","throwMatMenuMissingError","Error","throwMatMenuInvalidPositionX","throwMatMenuInvalidPositionY","MAT_MENU_SCROLL_STRATEGY_PROVIDER_FACTORY","overlay","scrollStrategies","reposition","setPrototypeOf","__proto__","Array","p","hasOwnProperty","matMenuAnimations","transformMenu","trigger","state","style","opacity","transform","transition","animate","fadeInItems","MatMenuItemBase","_MatMenuItemMixinBase","mixinDisableRipple","mixinDisabled","MatMenuItem","_elementRef","document","_focusMonitor","_this","_super","call","_hovered","Subject","_highlighted","_triggersSubmenu","monitor","_getHostElement","_document","tslib_1.__extends","focus","origin","focusVia","ngOnDestroy","stopMonitoring","complete","_getTabIndex","disabled","nativeElement","_checkDisabled","event","preventDefault","stopPropagation","_emitHoverEvent","next","getLabel","element","textNodeType","TEXT_NODE","output","childNodes","length_1","length","i","nodeType","textContent","trim","type","Component","args","selector","exportAs","inputs","host","role","class","[class.mat-menu-item-highlighted]","[class.mat-menu-item-submenu-trigger]","[attr.tabindex]","[attr.aria-disabled]","[attr.disabled]","(click)","(mouseenter)","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","preserveWhitespaces","template","FocusMonitor","MAT_MENU_DEFAULT_OPTIONS","InjectionToken","MatMenu","_ngZone","_defaultOptions","_xPosition","xPosition","_yPosition","yPosition","_tabSubscription","Subscription","EMPTY","_classList","_panelAnimationState","_overlapTrigger","overlapTrigger","closed","EventEmitter","close","defineProperty","value","setPositionClasses","coerceBooleanProperty","classes","split","reduce","obj","className","panelClass","ngAfterContentInit","_keyManager","FocusKeyManager","items","withWrap","withTypeAhead","tabOut","subscribe","emit","unsubscribe","changes","pipe","startWith","switchMap","merge","apply","map","item","onStable","asObservable","take","_handleKeydown","keyCode","ESCAPE","LEFT_ARROW","parentMenu","direction","RIGHT_ARROW","onKeydown","focusFirstItem","setFocusOrigin","setFirstItemActive","resetActiveItem","setActiveItem","posX","posY","setElevation","depth","newElevation","customElevation","keys","find","c","startsWith","_previousElevation","_startAnimation","_resetAnimation","_onAnimationDone","toState","styles","animations","undefined","decorators","Inject","propDecorators","templateRef","ViewChild","TemplateRef","ContentChildren","Input","classList","Output","MAT_MENU_SCROLL_STRATEGY","MAT_MENU_SCROLL_STRATEGY_PROVIDER","provide","deps","Overlay","useFactory","MatMenuTrigger","_overlay","_element","_viewContainerRef","_scrollStrategy","_parentMenu","_menuItemInstance","_dir","_overlayRef","_menuOpen","_closeSubscription","_positionSubscription","_hoverSubscription","_openedByMouse","menuOpened","onMenuOpen","menuClosed","onMenuClose","triggersSubmenu","menu","v","_checkMenu","reason","_destroyMenu","filter","active","openMenu","dispose","_cleanUpSubscriptions","toggleMenu","closeMenu","_createOverlay","attach","_portal","_menuClosingActions","_initMenu","menuOpen","_resetMenu","detach","dir","_setMenuElevation","_setIsMenuOpen","isOpen","TemplatePortal","config","_getOverlayConfig","_subscribeToPositions","OverlayConfig","positionStrategy","_getPosition","hasBackdrop","backdropClass","scrollStrategy","position","onPositionChange","change","connectionPair","overlayX","overlayY","_a","originX","originFallbackX","_b","overlayFallbackY","_c","originY","originFallbackY","_d","overlayFallbackX","offsetY","connectedTo","withDirection","withOffsetY","withFallbackPosition","backdrop","backdropClick","detachments","parentClose","observableOf","hover","_handleMousedown","isFakeMousedownFromScreenReader","_handleClick","Directive","aria-haspopup","(mousedown)","(keydown)","ElementRef","ViewContainerRef","Optional","Self","Directionality","_deprecatedMatMenuTriggerFor","ɵ0","NgModule","imports","A11yModule","CommonModule","MatCommonModule","MatRippleModule","OverlayModule","exports","declarations","providers","useValue","MatMenuModule"],"mappings":"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"}